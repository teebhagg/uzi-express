import { ProductWithIncludes } from "@/lib/prisma";
import { faker } from "@faker-js/faker";

export const productData: ProductWithIncludes[] = [
  {
    id: faker.string.uuid(),
    title: faker.commerce.productName(),
    description: faker.commerce.productDescription(),
    price: Number(faker.commerce.price()),
    discount: Number(faker.commerce.price({ max: 70 })),
    createdAt: faker.date.past(),
    updatedAt: faker.date.recent(),
    images: [faker.image.url(), faker.image.url()],
    keywords: [faker.commerce.productName(), faker.commerce.productName()],
    categories: [
      {
        id: faker.string.uuid(),
        title: faker.commerce.department(),
        description: faker.commerce.productDescription(),
        createdAt: faker.date.past(),
        updatedAt: faker.date.recent(),
      },
      {
        id: faker.string.uuid(),
        title: faker.commerce.department(),
        description: faker.commerce.productDescription(),
        createdAt: faker.date.past(),
        updatedAt: faker.date.recent(),
      },
    ],
    brand: {
      id: faker.string.uuid(),
      title: faker.commerce.productName(),
      description: faker.commerce.productDescription(),
      logo: faker.image.url(),
    },
    isAvailable: faker.datatype.boolean(),
    isFeatured: faker.datatype.boolean(),
    isPhysical: faker.datatype.boolean(),
    metadata: {
      title: faker.commerce.productName(),
      description: faker.commerce.productDescription(),
      keywords: [faker.commerce.productName(), faker.commerce.productName()],
    },
    stock: faker.number.int(),
    brandId: faker.string.uuid(),
  },
  {
    id: faker.string.uuid(),
    title: faker.commerce.productName(),
    description: faker.commerce.productDescription(),
    price: Number(faker.commerce.price()),
    discount: Number(faker.commerce.price({ max: 70 })),
    createdAt: faker.date.past(),
    updatedAt: faker.date.recent(),
    images: [faker.image.url(), faker.image.url()],
    categories: [
      {
        id: faker.string.uuid(),
        title: faker.commerce.department(),
        description: faker.commerce.productDescription(),
        createdAt: faker.date.past(),
        updatedAt: faker.date.recent(),
      },
      {
        id: faker.string.uuid(),
        title: faker.commerce.department(),
        description: faker.commerce.productDescription(),
        createdAt: faker.date.past(),
        updatedAt: faker.date.recent(),
      },
    ],
    brand: {
      id: faker.string.uuid(),
      title: faker.commerce.productName(),
      description: faker.commerce.productDescription(),
      logo: faker.image.url(),
    },
    keywords: [faker.commerce.productName(), faker.commerce.productName()],
    isAvailable: faker.datatype.boolean(),
    isFeatured: faker.datatype.boolean(),
    isPhysical: faker.datatype.boolean(),
    metadata: {
      title: faker.commerce.productName(),
      description: faker.commerce.productDescription(),
      keywords: [faker.commerce.productName(), faker.commerce.productName()],
    },
    stock: faker.number.int(),
    brandId: faker.string.uuid(),
  },
  {
    id: faker.string.uuid(),
    title: faker.commerce.productName(),
    description: faker.commerce.productDescription(),
    price: Number(faker.commerce.price()),
    discount: Number(faker.commerce.price({ max: 70 })),
    createdAt: faker.date.past(),
    updatedAt: faker.date.recent(),
    images: [faker.image.url(), faker.image.url()],
    categories: [
      {
        id: faker.string.uuid(),
        title: faker.commerce.department(),
        description: faker.commerce.productDescription(),
        createdAt: faker.date.past(),
        updatedAt: faker.date.recent(),
      },
      {
        id: faker.string.uuid(),
        title: faker.commerce.department(),
        description: faker.commerce.productDescription(),
        createdAt: faker.date.past(),
        updatedAt: faker.date.recent(),
      },
    ],
    brand: {
      id: faker.string.uuid(),
      title: faker.commerce.productName(),
      description: faker.commerce.productDescription(),
      logo: faker.image.url(),
    },
    keywords: [faker.commerce.productName(), faker.commerce.productName()],
    isAvailable: faker.datatype.boolean(),
    isFeatured: faker.datatype.boolean(),
    isPhysical: faker.datatype.boolean(),
    metadata: {
      title: faker.commerce.productName(),
      description: faker.commerce.productDescription(),
      keywords: [faker.commerce.productName(), faker.commerce.productName()],
    },
    stock: faker.number.int(),
    brandId: faker.string.uuid(),
  },
  {
    id: faker.string.uuid(),
    title: faker.commerce.productName(),
    description: faker.commerce.productDescription(),
    price: Number(faker.commerce.price()),
    discount: Number(faker.commerce.price({ max: 70 })),
    createdAt: faker.date.past(),
    updatedAt: faker.date.recent(),
    images: [faker.image.url(), faker.image.url()],
    categories: [
      {
        id: faker.string.uuid(),
        title: faker.commerce.department(),
        description: faker.commerce.productDescription(),
        createdAt: faker.date.past(),
        updatedAt: faker.date.recent(),
      },
      {
        id: faker.string.uuid(),
        title: faker.commerce.department(),
        description: faker.commerce.productDescription(),
        createdAt: faker.date.past(),
        updatedAt: faker.date.recent(),
      },
    ],
    brand: {
      id: faker.string.uuid(),
      title: faker.commerce.productName(),
      description: faker.commerce.productDescription(),
      logo: faker.image.url(),
    },
    keywords: [faker.commerce.productName(), faker.commerce.productName()],
    isAvailable: faker.datatype.boolean(),
    isFeatured: faker.datatype.boolean(),
    isPhysical: faker.datatype.boolean(),
    metadata: {
      title: faker.commerce.productName(),
      description: faker.commerce.productDescription(),
      keywords: [faker.commerce.productName(), faker.commerce.productName()],
    },
    stock: faker.number.int(),
    brandId: faker.string.uuid(),
  },
  {
    id: faker.string.uuid(),
    title: faker.commerce.productName(),
    description: faker.commerce.productDescription(),
    price: Number(faker.commerce.price()),
    discount: Number(faker.commerce.price({ max: 70 })),
    createdAt: faker.date.past(),
    updatedAt: faker.date.recent(),
    images: [faker.image.url(), faker.image.url()],
    categories: [
      {
        id: faker.string.uuid(),
        title: faker.commerce.department(),
        description: faker.commerce.productDescription(),
        createdAt: faker.date.past(),
        updatedAt: faker.date.recent(),
      },
      {
        id: faker.string.uuid(),
        title: faker.commerce.department(),
        description: faker.commerce.productDescription(),
        createdAt: faker.date.past(),
        updatedAt: faker.date.recent(),
      },
    ],
    brand: {
      id: faker.string.uuid(),
      title: faker.commerce.productName(),
      description: faker.commerce.productDescription(),
      logo: faker.image.url(),
    },
    keywords: [faker.commerce.productName(), faker.commerce.productName()],
    isAvailable: faker.datatype.boolean(),
    isFeatured: faker.datatype.boolean(),
    isPhysical: faker.datatype.boolean(),
    metadata: {
      title: faker.commerce.productName(),
      description: faker.commerce.productDescription(),
      keywords: [faker.commerce.productName(), faker.commerce.productName()],
    },
    stock: faker.number.int(),
    brandId: faker.string.uuid(),
  },
  {
    id: faker.string.uuid(),
    title: faker.commerce.productName(),
    description: faker.commerce.productDescription(),
    price: Number(faker.commerce.price()),
    discount: Number(faker.commerce.price({ max: 70 })),
    createdAt: faker.date.past(),
    updatedAt: faker.date.recent(),
    images: [faker.image.url(), faker.image.url()],
    categories: [
      {
        id: faker.string.uuid(),
        title: faker.commerce.department(),
        description: faker.commerce.productDescription(),
        createdAt: faker.date.past(),
        updatedAt: faker.date.recent(),
      },
      {
        id: faker.string.uuid(),
        title: faker.commerce.department(),
        description: faker.commerce.productDescription(),
        createdAt: faker.date.past(),
        updatedAt: faker.date.recent(),
      },
    ],
    brand: {
      id: faker.string.uuid(),
      title: faker.commerce.productName(),
      description: faker.commerce.productDescription(),
      logo: faker.image.url(),
    },
    keywords: [faker.commerce.productName(), faker.commerce.productName()],
    isAvailable: faker.datatype.boolean(),
    isFeatured: faker.datatype.boolean(),
    isPhysical: faker.datatype.boolean(),
    metadata: {
      title: faker.commerce.productName(),
      description: faker.commerce.productDescription(),
      keywords: [faker.commerce.productName(), faker.commerce.productName()],
    },
    stock: faker.number.int(),
    brandId: faker.string.uuid(),
  },
];
